// <auto-generated />
using System;
using BooksApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksApp.Persistence.Migrations
{
    [DbContext(typeof(BooksAppDbContext))]
    [Migration("20250408041013_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksApp.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("AverageRating")
                        .HasColumnType("real");

                    b.PrimitiveCollection<string>("Categories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GoogleBooksId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModificationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MainCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<long?>("RatingsCount")
                        .HasColumnType("bigint");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BooksApp.Domain.Entities.Book", b =>
                {
                    b.OwnsOne("BooksApp.Domain.ValueObjects.BookDimensions", "Dimensions", b1 =>
                        {
                            b1.Property<Guid>("BookId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float?>("Height")
                                .HasColumnType("real")
                                .HasColumnName("Height");

                            b1.Property<float?>("Thickness")
                                .HasColumnType("real")
                                .HasColumnName("Thickness");

                            b1.Property<float?>("Width")
                                .HasColumnType("real")
                                .HasColumnName("Width");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.Navigation("Dimensions")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
